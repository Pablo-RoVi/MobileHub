// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MobileHub.Src.Data;

#nullable disable

namespace MobileHub.Src.Data.Migrations
{
    /// <summary>
    /// Model snapshot class for the DataContext.
    /// </summary>
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        /// <inheritdoc />
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            // Set the product version for the model.
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            // Define the User entity in the model.
            modelBuilder.Entity("MobileHub.Src.Models.User", b =>
                {
                    // Configure properties for the User entity.
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER"); // Id property with auto-increment and type INTEGER.

                    b.Property<int>("BirthYear")
                        .HasColumnType("INTEGER"); // BirthYear property with type INTEGER.

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT"); // Email property with TEXT type and non-nullable.

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT"); // FullName property with TEXT type and non-nullable.

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT"); // Password property with TEXT type and non-nullable.

                    b.Property<string>("Rut")
                        .IsRequired()
                        .HasColumnType("TEXT"); // Rut property with TEXT type and non-nullable.

                    // Set the primary key constraint for the Users table.
                    b.HasKey("Id");

                    // Map the User entity to the "Users" table in the database.
                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
